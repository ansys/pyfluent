[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
# Check https://flit.readthedocs.io/en/latest/pyproject_toml.html for all available sections
name = "ansys-fluent-core"
version = "0.29.dev0"
description = "PyFluent provides Pythonic access to Ansys Fluent."
readme = "README.rst"
requires-python = ">=3.10,<3.14"
license = {file = "LICENSE"}
authors = [{ name = "ANSYS, Inc.", email = "pyansys.core@ansys.com" }]
maintainers = [{ name = "ANSYS, Inc.", email = "pyansys.core@ansys.com" }]
repository = "https://github.com/ansys/pyfluent"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "ansys-api-fluent>=0.3.33",
    "ansys-platform-instancemanagement~=1.0",
    "ansys-tools-filetransfer>=0.1,<0.3",
    "ansys-units>=0.3.3,<0.5",
    "docker>=7.1.0",
    "grpcio>=1.30.0",
    "grpcio-health-checking>=1.30.0",
    "grpcio-status>=1.30.0",
    "lxml>=4.9.2",
    "nltk>=3.9.1",
    "numpy>=1.14.0,<3.0.0",
    "pandas>=1.1.0,<2.3",
    "pyyaml>=6.0",
]

[tool.flit.sdist]
include = [
    "src/ansys/fluent/core/generated/fluent_version_*.py",
    "src/ansys/fluent/core/generated/meshing/tui_*.py",
    "src/ansys/fluent/core/generated/solver/*.py",
    "src/ansys/fluent/core/generated/solver/*.pyi",
    "src/ansys/fluent/core/generated/datamodel_*/*.py",
    "src/ansys/fluent/core/generated/solver/settings_*/*.py",
    "src/ansys/fluent/core/generated/solver/settings_*/*.pyi",
    "src/ansys/fluent/core/generated/solver/settings_*.zip",
    "src/ansys/fluent/core/generated/*.pickle",
    "src/ansys/fluent/core/generated/api_tree/*.json",
]

[project.optional-dependencies]
reader = ["h5py==3.12.1"]
tests = [
    "pytest==8.3.4",
    "pytest-cov==6.0.0",
    "pytest-mock==3.14.0",
    "pytest-xdist==3.6.1",
]
docs = [
    "Sphinx==7.4.7",
    "jupyter_sphinx==0.5.3",
    "numpydoc==1.8.0",
    "matplotlib==3.10.0",
    "ansys-sphinx-theme==1.2.4",
    "pypandoc==1.14",
    "pytest-sphinx==0.6.3",
    "sphinx-autobuild==2024.10.3",
    "sphinx-autodoc-typehints==2.3.0",
    "sphinx-copybutton==0.5.2",
    "sphinx-gallery==0.18.0",
    "sphinx-notfound-page==1.0.4",
    "sphinxcontrib-websupport==2.0.0",
    "sphinxemoji==0.3.1",
    "sphinx-toggleprompt==0.5.2",
    "autodocsumm==0.2.14",
    "beautifulsoup4==4.12.3",
    "openpyxl>=3.1.5",
    "plotly>=5.22.0",
    "python-pptx>=0.6.23",
    "quarto-cli==1.6.39",
    "pdf2image==1.17.0",
    "seaborn>=0.13.2",
    "tensorflow>=2.17.0",
]

[tool.flit.module]
name = "ansys.fluent.core"

[project.urls]
"Documentation" = "https://fluent.docs.pyansys.com/"
"Source" = "https://github.com/ansys/pyfluent"
"Tracker" = "https://github.com/ansys/pyfluent/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = """
--ignore=tests/fluent
--ignore=tests/journals
-v
--durations=0
--show-capture=all
"""
markers = [
    "settings_only: Read and modify the case settings only, without loading the mesh, initializing, or solving the case",
    "nightly: Tests that run under nightly CI",
    "codegen_required: Tests that requires codegen",
    "fluent_version(version): Tests that runs with specified Fluent version",
    "standalone: Tests that cannot be run within container"
]


[tool.black]
extend-exclude = "/(src/ansys/fluent/core/meshing/tui*|src/ansys/fluent/core/solver/tui*|src/ansys/fluent/core/solver/settings*|src/ansys/fluent/core/datamodel*)/"


[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 88
default_section = "THIRDPARTY"
skip_glob = [
    "src/ansys/fluent/core/generated"
]
filter_files = "true"
known_first_party = ["ansys"]


[tool.codespell]
skip = """
    *.xml,
    ./src/ansys/fluent/core/generated/*,
    ./src/ansys/fluent/core/codegen/data/fluent_gui_help.xml,
    pyproject.toml,
    CODE_OF_CONDUCT.md,
    """
ignore-words = ".github/styles/config/vocabularies/ANSYS/accept.txt"


[tool.docformatter]
in-place = "true"
exclude = [
    "tests/",
    "src/ansys/fluent/core/generated/",
]
black = "true"
non-cap = [
    "initDatamodel",
    "getAttributeValue",
    "getState",
    "setState",
    "updateDict",
    "deleteObject",
    "executeCommand",
    "createCommandArguments",
    "deleteCommandArguments",
    "getSpecs",
    "getStaticInfo",
    "subscribeEvents",
    "unsubscribeEvents"
]


[tool.coverage.run]
source = ["ansys/fluent"]
omit = [
    "*/ansys/fluent/core/generated/*",
]

[tool.coverage.report]
show_missing = true

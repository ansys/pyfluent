# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.api.fluent.v0.scheme_eval_pb2 as scheme__eval__pb2
import ansys.api.fluent.v0.scheme_pointer_pb2 as scheme__pointer__pb2


class SchemeEvalStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Eval = channel.unary_unary(
                '/grpcRemoting.SchemeEval/Eval',
                request_serializer=scheme__pointer__pb2.SchemePointer.SerializeToString,
                response_deserializer=scheme__pointer__pb2.SchemePointer.FromString,
                )
        self.Exec = channel.unary_unary(
                '/grpcRemoting.SchemeEval/Exec',
                request_serializer=scheme__eval__pb2.ExecRequest.SerializeToString,
                response_deserializer=scheme__eval__pb2.ExecResponse.FromString,
                )
        self.StringEval = channel.unary_unary(
                '/grpcRemoting.SchemeEval/StringEval',
                request_serializer=scheme__eval__pb2.StringEvalRequest.SerializeToString,
                response_deserializer=scheme__eval__pb2.StringEvalResponse.FromString,
                )


class SchemeEvalServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Eval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exec(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StringEval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchemeEvalServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Eval': grpc.unary_unary_rpc_method_handler(
                    servicer.Eval,
                    request_deserializer=scheme__pointer__pb2.SchemePointer.FromString,
                    response_serializer=scheme__pointer__pb2.SchemePointer.SerializeToString,
            ),
            'Exec': grpc.unary_unary_rpc_method_handler(
                    servicer.Exec,
                    request_deserializer=scheme__eval__pb2.ExecRequest.FromString,
                    response_serializer=scheme__eval__pb2.ExecResponse.SerializeToString,
            ),
            'StringEval': grpc.unary_unary_rpc_method_handler(
                    servicer.StringEval,
                    request_deserializer=scheme__eval__pb2.StringEvalRequest.FromString,
                    response_serializer=scheme__eval__pb2.StringEvalResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcRemoting.SchemeEval', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchemeEval(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Eval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcRemoting.SchemeEval/Eval',
            scheme__pointer__pb2.SchemePointer.SerializeToString,
            scheme__pointer__pb2.SchemePointer.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcRemoting.SchemeEval/Exec',
            scheme__eval__pb2.ExecRequest.SerializeToString,
            scheme__eval__pb2.ExecResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StringEval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcRemoting.SchemeEval/StringEval',
            scheme__eval__pb2.StringEvalRequest.SerializeToString,
            scheme__eval__pb2.StringEvalResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

from ansys.fluent.core.datamodel_232.preferences import Root as preferences_root
from ansys.fluent.core.datamodel_232.solverworkflow import Root as solverworkflow_root
from ansys.fluent.core.datamodel_232.workflow import Root as workflow_root
from ansys.fluent.core.solver.settings_232.current_parametric_study import (
    current_parametric_study,
)
from ansys.fluent.core.solver.settings_232.file import file
from ansys.fluent.core.solver.settings_232.mesh import mesh
from ansys.fluent.core.solver.settings_232.parallel import parallel
from ansys.fluent.core.solver.settings_232.parametric_studies import parametric_studies
from ansys.fluent.core.solver.settings_232.report import report
from ansys.fluent.core.solver.settings_232.results import results
from ansys.fluent.core.solver.settings_232.setup import setup
from ansys.fluent.core.solver.settings_232.solution import solution
from ansys.fluent.core.solver.tui_232 import main_menu

class Solver:
    def build_from_fluent_connection(self, fluent_connection): ...
    @property
    def version(self): ...
    @property
    def tui(self) -> main_menu: ...
    @property
    def workflow(self) -> workflow_root: ...
    @property
    def file(self) -> file: ...
    @property
    def mesh(self) -> mesh: ...
    @property
    def setup(self) -> setup: ...
    @property
    def solution(self) -> solution: ...
    @property
    def results(self) -> results: ...
    @property
    def parametric_studies(self) -> parametric_studies: ...
    @property
    def current_parametric_study(self) -> current_parametric_study: ...
    @property
    def parallel(self) -> parallel: ...
    @property
    def report(self) -> report: ...
    @property
    def preferences(self) -> preferences_root: ...
    @property
    def solverworkflow(self) -> solverworkflow_root: ...
    def read_case(self, file_name: str, lightweight_mode: bool = ...): ...

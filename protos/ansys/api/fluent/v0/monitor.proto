//
// Copyright 1987-2022 ANSYS, Inc. All Rights Reserved.
//

syntax = "proto3";

package grpcRemoting;

service Monitor {
  /* Get monitors info i.e. monitors name and their properties e.g. x-label, y-label, title etc*/
  rpc GetMonitors(GetMonitorsRequest) returns (GetMonitorsResponse) {}
  /* Begin monitors data streaming i.e. monitors x-values and corresponding y-values.*/
  rpc BeginStreaming(StreamingRequest) returns (stream StreamingResponse) {}
}

/**
 * Monitor type.
 */
enum MonitorType {
  Residual = 0;  // Solver residuals.
  Solution = 1;  // Solution monitors.
}

/**
 * X-axis type.
 */
enum XAxisType {
  Unset = 0;      // Axis unset.
  Iteration = 1;  // Iteration axis.
  Time = 2;       // Time axis.
}

/**
 * Unit data.
 */
message UnitData {
  string name = 1;    // Unit name
  string unit = 2;    // Unit e.g. Fahrenheit
  double factor = 3;  // Unit factor e.g. for Fahrenheit it will be 0.5555556.
  double offset = 4;  // Unit offset e.g. for Fahrenheit it will be 459.67.
}

/**
 * Monitor set definition provided by GetMonitors.
 */
message MonitorSet {
  string name = 1;               // Monitor set name.
  string title = 2;              // Monitor set title.
  string xlabel = 3;             // Monitor set xlabel.
  string ylabel = 4;             // Monitor set ylabel.
  sint64 frequency = 5;          // Monitor set frequency.
  MonitorType type = 6;          // Monitor set type.
  UnitData unitinfo = 7;         // Monitor set unit info.
  XAxisType axis = 8;            // X-axis type.
  repeated string monitors = 9;  // Monitor set monitors.
}

/**
 * X axis data i.e. axis type and index provided by monitors streaming.
 */
message XAxisData {
  XAxisType xaxistype = 1;  // X-axis type.
  sint64 xaxisindex = 2;    // X-axis index.
}

/**
 * Y axis data i.e. monitor name and value provided by monitors streaming.
 */
message MonitorData {
  string name = 1;
  double value = 2;
}

/**
 * GetMonitors Request.
 */
message GetMonitorsRequest {
}

/**
 * GetMonitors Response.
 */
message GetMonitorsResponse {
  repeated MonitorSet monitorset = 1;
}

/**
 * Streaming Request.
 */
message StreamingRequest {
}

/**
 * Streaming Response.
 */
message StreamingResponse {
  XAxisData xaxisdata = 1;
  repeated MonitorData yaxisvalues = 2;
}

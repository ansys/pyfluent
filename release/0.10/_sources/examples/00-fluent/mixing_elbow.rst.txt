
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-fluent/mixing_elbow.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-fluent_mixing_elbow.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-fluent_mixing_elbow.py:

.. _ref_mixing_elbow_tui_api:

End-to-end Watertight Meshing Workflow
---------------------------------------
This example illustrates the setup and solution of a three-dimensional
turbulent fluid flow and heat transfer problem in a mixing elbow. The mixing
elbow configuration is encountered in piping systems in power plants and
process industries. It is often important to predict the flow field and
temperature field in the area of the mixing region in order to properly design
the junction.

End-to-end Watertight Meshing Workflow example

- Use the Watertight Geometry guided workflow to:
    - Import a CAD geometry
    - Generate a surface mesh
    - Describe the geometry
    - Generate a volume mesh
- Launch Ansys Fluent.
- Read an existing mesh file into Ansys Fluent.
- Use mixed units to define the geometry and fluid properties.
- Set material properties and boundary conditions for a turbulent
  forced-convection problem.
- Create a surface report definition and use it as a convergence criterion.
- Calculate a solution using the pressure-based solver.
- Visually examine the flow and temperature fields using the postprocessing
  tools available in Ansys Fluent.

Problem Description:
A cold fluid at 20 deg C flows into the pipe through a large inlet, and mixes
with a warmer fluid at 40 deg C that enters through a smaller inlet located at
the elbow. The pipe dimensions are in inches and the fluid properties and
boundary conditions are given in SI units. The Reynolds number for the flow at
the larger inlet is 50, 800, so a turbulent flow model will be required.

.. GENERATED FROM PYTHON SOURCE LINES 36-38

.. code-block:: default

    # sphinx_gallery_thumbnail_path = '_static/mixing_elbow.png'








.. GENERATED FROM PYTHON SOURCE LINES 39-41

First, download the geometry file and start Fluent as a service with
Meshing Mode, Double Precision, Number of Processors 2

.. GENERATED FROM PYTHON SOURCE LINES 41-51

.. code-block:: default


    import ansys.fluent.core as pyfluent
    from ansys.fluent.core import examples

    import_filename = examples.download_file("mixing_elbow.pmdb", "pyfluent/mixing_elbow")

    session = pyfluent.launch_fluent(
        meshing_mode=True, precision="double", processor_count=2
    )








.. GENERATED FROM PYTHON SOURCE LINES 52-53

Select the Watertight Geometry Meshing Workflow

.. GENERATED FROM PYTHON SOURCE LINES 53-56

.. code-block:: default

    session.meshing.workflow.InitializeWorkflow(WorkflowType="Watertight Geometry")






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 57-59

Import the CAD geometry. For Length Units, select "in".
Execute the Import Geometry task.

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: default


    session.meshing.workflow.TaskObject["Import Geometry"].Arguments = dict(
        FileName=import_filename, LengthUnit="in"
    )

    session.meshing.workflow.TaskObject["Import Geometry"].Execute()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Warning: PMDB file will not be saved as the same is being imported.

    Importing one geom object per program-controlled and one zone per body ...
    /ansys_inc/v222/aisol/.workbench: line 175: openssl: command not found
    Initializing ANSYS component system ...
    running Ansys.Meshing.FieldMesher.exe ...
    creating FMComponent instance ...
    querying IFieldMesher interface ...
    AnsysFieldMesher build date: May 16 2022 16:17:51

    argv[0] = /ansys_inc/v222/aisol/CommonFiles/linx64/ansys.meshing.fieldmesher.exe
    argv[1] = -B
    argv[2] = /ansys_inc/v222/commonfiles/CPython/3_7/linx64/Release/python/../Ansys/TGrid/CADReaders.py
    argv[3] = -a
    argv[4] = //FM_9259c644c7e4_283/options1676299044.991797283.xml
    argv[5] = -a
    argv[6] = //FM_9259c644c7e4_283/options1676299044.991797283.xml
        /ansys_inc/v222/aisol/CommonFiles/linx64/ansys.meshing.fieldmesher.exe started by root on 9259c644c7e4 linx64 on Mon Feb 13 14:37:25 2023
        using Python 3.7.13 (default, Apr 28 2022, 08:00:21) 
        [GCC 8.2.0]
    
        using Ansys.Meshing.FieldMesher build May 16 2022 16:12:49
    
        running ANSYS TGrid CADToTGridConverter ...
        setting up parameters ...
        setting up parameters done.
        running conversion ...
        converting 1 file(s) from Workbench to FLTG using output path '//FM_9259c644c7e4_283/out1676299044.991797283.tgf'
        converting file 'mixing_elbow.pmdb' (1 of 1) from Workbench to FLTG using output path '//FM_9259c644c7e4_283/'
        importing data ...
        importing meshing model from PartMgr from file '/home/ansys/.local/share/ansys_fluent_core/examples/mixing_elbow.pmdb' ...
        setting enclosure and symmetry processing to False
        setting transfer named selections to True
        setting named selection prefixes to ''
        setting mixed import resolution type to 'SolidAndSurface'
        setting target application to 'FluentMeshing'
        initializing part manager from file ...
        processing assembly 'E:\Fluent_testing\Regressions\elbow_tui_fltg\std\elbow.scdoc' with ID 1 and reference key '<?xml version="1.0" encoding="utf-16"?>
        <IdTable xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <Table>
            <Entry>
              <Text>&lt;SnippetV1 sctype="SpaceClaim.BasicMoniker`1[[SpaceClaim.IEvaluation, Core]], Core" refId="81ad9b4c-8344-484a-b3a0-56e3834b262e:2" /&gt;</Text>
              <Id>10000</Id>
              <IsExploded>false</IsExploded>
            </Entry>
          </Table>
        </IdTable>'
        length unit = [m]
        processing part 'elbow' with ID 3
        processing named selection 'Symmetry:XYPlane'
        processing named selection 'hot-inlet'
        processing named selection 'cold-inlet'
        processing named selection 'outlet'
        processing named selection 'wall-inlet'
        processing named selection 'wall-elbow'
        processing data ...
        removing named collections of entities ...
        removing named collections of entities stopped, no named collections selected.
        analyzing feature edges ...
        detecting feature edges, feature angle = 40 [deg] ...
            Data information
                Meshing model
                    Attributes:
                        'LengthUnit': '[in]'
                    Entity summary:
                        Collection: 6
                        Component : 2
                        Body      : 1
                        Shell     : 1
                        Face      : 8
                        Loop      : 8
                        Edge      : 18
                        Vertex    : 12
                        Surface   : 8
                        Curve     : 18
                    Tessellation summary:
                        Face facets  : 1250
                        Edge segments: 235
                    Bounding box:
                        (-7.874015808105469, -8.858267784118652, 0) x (7.874015808105469, 7.874015808105469, 1.96705949306488)
                    Assembly component hierarchy:
                        'E:\Fluent_testing\Regressions\elbow_tui_fltg\std\elbow.scdoc'
                          'elbow'
                    NamedCollections:
                        'Symmetry:XYPlane'
                        'hot-inlet'
                        'cold-inlet'
                        'outlet'
                        'wall-inlet'
                        'wall-elbow'
    
    
        exporting FLTG data to file '//FM_9259c644c7e4_283/out1676299044.991797283.tgf' ...
        writing face-based mesh file '//FM_9259c644c7e4_283/out1676299044.991797283.tgf' ...
        ======== Exported Data ========
        Entity summary:
            Object       : 1
            Object region: 7
            Zone         : 15
    
        running conversion done.
        running ANSYS TGrid CADToTGridConverter done.
        ran ANSYS TGrid CADToTGridConverter in 0.070 [s]

    Reading "//FM_9259c644c7e4_283/out1676299044.991797283.tgf"...

    nodes: 776
    edges: 153
    faces: 1250
    cells: 0
    reading 776 storage data (id 1, type 41, double precision binary).
    generating pointers...done.
    extracting boundary entities...
     776 boundary nodes.
     1250 boundary faces.
     6 boundary face zones.
    done.
    analyzing boundary connectivity...done.

    ---------------- Import of mixing_elbow, consisting of one single part/object , complete. 
 

    True



.. GENERATED FROM PYTHON SOURCE LINES 67-72

Add local sizing:
In the Add Local Sizing task, you are prompted as to whether or not you would
like to add local sizing controls to the faceted geometry. For the purposes of
this example, you can keep the default setting. Execute to complete this task
and proceed to the next task in the workflow.

.. GENERATED FROM PYTHON SOURCE LINES 72-75

.. code-block:: default

    session.meshing.workflow.TaskObject["Add Local Sizing"].AddChildToTask()
    session.meshing.workflow.TaskObject["Add Local Sizing"].Execute()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 76-81

Generate the surface mesh:
In the Generate the Surface Mesh task, you can set various properties of the
surface mesh for the faceted geometry. Specify 0.3 for Maximum Size. Execute
the Surface Mesh to complete this task and proceed to the next task in the
workflow.

.. GENERATED FROM PYTHON SOURCE LINES 81-86

.. code-block:: default

    session.meshing.workflow.TaskObject["Generate the Surface Mesh"].Arguments = {
        "CFDSurfaceMeshControls": {"MaxSize": 0.3}
    }
    session.meshing.workflow.TaskObject["Generate the Surface Mesh"].Execute()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Writing "//FM_9259c644c7e4_283/TaskObject3.msh.h5" ...
    writing 1 node zones
    writing 9 edge zones 
    writing 6 face zones 
    done.(SizeFieldFile) not found in dict
    (SizeControlFile) not found in dict
    (SaveSizeFieldFile) not found in dict

    Importing one mesh object per program-controlled and one zone per body ...
    /ansys_inc/v222/aisol/.workbench: line 175: openssl: command not found
    Initializing ANSYS component system ...
    running Ansys.Meshing.FieldMesher.exe ...
    creating FMComponent instance ...
    querying IFieldMesher interface ...
    AnsysFieldMesher build date: May 16 2022 16:17:51

    argv[0] = /ansys_inc/v222/aisol/CommonFiles/linx64/ansys.meshing.fieldmesher.exe
    argv[1] = -B
    argv[2] = /ansys_inc/v222/commonfiles/CPython/3_7/linx64/Release/python/../Ansys/TGrid/CADReaders.py
    argv[3] = -a
    argv[4] = //FM_9259c644c7e4_283/options1676299048.153442283.xml
    argv[5] = -a
    argv[6] = //FM_9259c644c7e4_283/options1676299048.153442283.xml
        /ansys_inc/v222/aisol/CommonFiles/linx64/ansys.meshing.fieldmesher.exe started by root on 9259c644c7e4 linx64 on Mon Feb 13 14:37:28 2023
        using Python 3.7.13 (default, Apr 28 2022, 08:00:21) 
        [GCC 8.2.0]
    
        using Ansys.Meshing.FieldMesher build May 16 2022 16:12:49
    
        running ANSYS TGrid CADToTGridConverter ...
        setting up parameters ...
        setting up parameters done.
        running conversion ...
        converting 1 file(s) from Workbench to FLTG using output path '//FM_9259c644c7e4_283/out1676299048.153442283.tgf'
        converting file 'mixing_elbow.pmdb' (1 of 1) from Workbench to FLTG using output path '//FM_9259c644c7e4_283/'
        importing data ...
        importing meshing model from PartMgr from file '//FM_9259c644c7e4_283//mixing_elbow.pmdb' ...
        setting enclosure and symmetry processing to False
        setting transfer named selections to True
        setting named selection prefixes to ''
        setting mixed import resolution type to 'SolidAndSurface'
        setting target application to 'FluentMeshing'
        initializing part manager from file ...
        processing assembly 'E:\Fluent_testing\Regressions\elbow_tui_fltg\std\elbow.scdoc' with ID 1 and reference key '<?xml version="1.0" encoding="utf-16"?>
        <IdTable xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <Table>
            <Entry>
              <Text>&lt;SnippetV1 sctype="SpaceClaim.BasicMoniker`1[[SpaceClaim.IEvaluation, Core]], Core" refId="81ad9b4c-8344-484a-b3a0-56e3834b262e:2" /&gt;</Text>
              <Id>10000</Id>
              <IsExploded>false</IsExploded>
            </Entry>
          </Table>
        </IdTable>'
        length unit = [m]
        processing part 'elbow' with ID 3
        processing named selection 'Symmetry:XYPlane'
        processing named selection 'hot-inlet'
        processing named selection 'cold-inlet'
        processing named selection 'outlet'
        processing named selection 'wall-inlet'
        processing named selection 'wall-elbow'
        processing data ...
        saving size function background grid to file '//FM_9259c644c7e4_283/mixing_elbow.sf' ...
        writing size function background grid file '//FM_9259c644c7e4_283/mixing_elbow.sf' ...
        initializing size function background grid done in 0.03 [s]
        removing named collections of entities ...
        removing named collections of entities stopped, no named collections selected.
        analyzing feature edges ...
        detecting feature edges, feature angle = 40 [deg] ...
            Data information
                Meshing model
                    Attributes:
                        'LengthUnit': '[in]'
                    Entity summary:
                        Collection: 6
                        Component : 2
                        Body      : 1
                        Shell     : 1
                        Face      : 8
                        Loop      : 8
                        Edge      : 18
                        Vertex    : 12
                        Surface   : 8
                        Curve     : 18
                    Tessellation summary:
                        Face facets  : 7862
                        Edge segments: 342
                    Bounding box:
                        (-7.874015808105469, -8.858267784118652, 0) x (7.874015808105469, 7.874015808105469, 1.968503832817078)
                    Assembly component hierarchy:
                        'E:\Fluent_testing\Regressions\elbow_tui_fltg\std\elbow.scdoc'
                          'elbow'
                    NamedCollections:
                        'Symmetry:XYPlane'
                        'hot-inlet'
                        'cold-inlet'
                        'outlet'
                        'wall-inlet'
                        'wall-elbow'
    
    
        exporting FLTG data to file '//FM_9259c644c7e4_283/out1676299048.153442283.tgf' ...
        writing face-based mesh file '//FM_9259c644c7e4_283/out1676299048.153442283.tgf' ...
        ======== Exported Data ========
        Entity summary:
            Object       : 1
            Object region: 7
            Zone         : 15
    
        running conversion done.
        running ANSYS TGrid CADToTGridConverter done.
        ran ANSYS TGrid CADToTGridConverter in 0.255 [s]

    Reading "//FM_9259c644c7e4_283/out1676299048.153442283.tgf"...

    nodes: 4229
    edges: 300
    faces: 7862
    cells: 0
    reading 4229 storage data (id 1, type 41, double precision binary).
    appending mesh...
    done.
    generating pointers...done.
    extracting boundary entities...
     5005 boundary nodes.
     9112 boundary faces.
     12 boundary face zones.
    done.

    Reading "//FM_9259c644c7e4_283/mixing_elbow.sf"...

    ANSYS(R) TGLib(TM) 3D, revision 18.1.0
     Read 5406 vertices
    0 faces marked.

        computing regions...done


    ------------------------- --------------------- -------------------- ---------------- ----------
                         name skewed-cells (> 0.80)    averaged-skewness maximum-skewness face count
    ------------------------- --------------------- -------------------- ---------------- ----------
                  elbow-fluid                     0          0.017166519       0.41817382       7862

    ------------------------- --------------------- -------------------- ---------------- ----------
                         name skewed-cells (> 0.80)    averaged-skewness maximum-skewness face count
    ------------------------- --------------------- -------------------- ---------------- ----------
                  elbow-fluid                     0          0.017166519       0.41817382       7862


    ---------------- After Surface mesh, the model consists of 1 fluid/solid regions and 0 voids.

    ---------------- Surface Meshing of mixing_elbow complete in  0.02 minutes, with a maximum skewness of  0.42. 


    True



.. GENERATED FROM PYTHON SOURCE LINES 87-93

Describe the geometry:
When you select the Describe Geometry task, you are prompted with questions
relating to the nature of the imported geometry. Since the geometry defined
the fluid region. Select The geometry consists of only fluid regions with no
voids for Geometry Type. Execute Describe Geometry to complete this task and
proceed to the next task in the workflow.

.. GENERATED FROM PYTHON SOURCE LINES 93-104

.. code-block:: default

    session.meshing.workflow.TaskObject["Describe Geometry"].UpdateChildTasks(
        SetupTypeChanged=False
    )
    session.meshing.workflow.TaskObject["Describe Geometry"].Arguments = dict(
        SetupType="The geometry consists of only fluid regions with no voids"
    )
    session.meshing.workflow.TaskObject["Describe Geometry"].UpdateChildTasks(
        SetupTypeChanged=True
    )
    session.meshing.workflow.TaskObject["Describe Geometry"].Execute()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ---------------- Velocity-inlet zone type was automatically assigned to zones containing the string 'inlet'.

    ---------------- Pressure-outlet zone type was automatically assigned to zones containing the string 'outlet'.

    ---------------- Symmetry zone type was automatically assigned to zones containing the string 'symmetry'.

    True



.. GENERATED FROM PYTHON SOURCE LINES 105-109

Update Boundaries Task:
For the wall-inlet boundary, change the Boundary Type field to wall. Execute
Update Boundaries to complete this task and proceed to the next task in the
workflow.

.. GENERATED FROM PYTHON SOURCE LINES 109-117

.. code-block:: default

    session.meshing.workflow.TaskObject["Update Boundaries"].Arguments = {
        "BoundaryLabelList": ["wall-inlet"],
        "BoundaryLabelTypeList": ["wall"],
        "OldBoundaryLabelList": ["wall-inlet"],
        "OldBoundaryLabelTypeList": ["velocity-inlet"],
    }
    session.meshing.workflow.TaskObject["Update Boundaries"].Execute()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ---------------- Boundary Conditions Updated

    True



.. GENERATED FROM PYTHON SOURCE LINES 118-122

Update your regions:
Select the Update Regions task, where you can review the names and types of
the various regions that have been generated from your imported geometry, and
change them as needed. Keep the default settings, and execute Update Regions.

.. GENERATED FROM PYTHON SOURCE LINES 122-124

.. code-block:: default

    session.meshing.workflow.TaskObject["Update Regions"].Execute()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ---------------- Regions Updated

    True



.. GENERATED FROM PYTHON SOURCE LINES 125-128

Add Boundary Layers:
Select the Add Boundary Layers task, where you can set properties of the
boundary layer mesh. Keep the default settings, and Add Boundary Layers.

.. GENERATED FROM PYTHON SOURCE LINES 128-137

.. code-block:: default


    session.meshing.workflow.TaskObject["Add Boundary Layers"].AddChildToTask()
    session.meshing.workflow.TaskObject["Add Boundary Layers"].InsertCompoundChildTask()
    session.meshing.workflow.TaskObject["smooth-transition_1"].Arguments = {
        "BLControlName": "smooth-transition_1",
    }
    session.meshing.workflow.TaskObject["Add Boundary Layers"].Arguments = {}
    session.meshing.workflow.TaskObject["smooth-transition_1"].Execute()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Created Scoped Prism: smooth-transition_1

    ---------------- Inflation control added to elbow-fluid

    True



.. GENERATED FROM PYTHON SOURCE LINES 138-142

Generate the volume mesh:
Select the Generate the Volume Mesh task, where you can set properties of the
volume mesh. Select the poly-hexcore for Fill With. Execute Generate the
Volume Mesh.

.. GENERATED FROM PYTHON SOURCE LINES 142-150

.. code-block:: default

    session.meshing.workflow.TaskObject["Generate the Volume Mesh"].Arguments = {
        "VolumeFill": "poly-hexcore",
        "VolumeFillControls": {
            "HexMaxCellLength": 0.3,
        },
    }
    session.meshing.workflow.TaskObject["Generate the Volume Mesh"].Execute()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Writing "//FM_9259c644c7e4_283/TaskObject11.msh.h5" ...
    writing 2 node zones
    writing 18 edge zones 
    writing 12 face zones 
    done.
    checking object "elbow-fluid"...
        skipping validating regions of mesh object "elbow-fluid"...done.
    auto meshing object elbow-fluid...

    processing scoped prisms...
        starting orientation...done.
        setting prism growth...done.
    done.
    Identifying Topology...

    The octree hexcore cells will be refined using local surface mesh sizes and body of influence (boi) size controls, if there are any defined.
    Generating Prisms...

    Generating initial mesh...
    .


    Refining mesh...

    Create polyhedra ...
    .

    .

    .

    .

    .


    delete virtual and dead zones.

    Merging zones...

    Cleaning up dead entities...


    Merging Domains...
    done.

    Quality Measure has been changed to Orthogonal Quality.
                         name       id cells (quality < 0.10)  minimum quality cell count
    ------------------------- -------- ---------------------- ---------------- ----------
                  elbow-fluid       87                      0       0.21482405      17587

                         name       id cells (quality < 0.10)  minimum quality cell count
    ------------------------- -------- ---------------------- ---------------- ----------
              Overall Summary     none                      0       0.21482405      17587

    Total Number of Cell Zones : 1

    [Quality Measure : Orthogonal Quality]

    ---------------- 17587 cells were created in :  0.07 minutes

    ---------------- The mesh has a minimum Orthogonal Quality of:  0.21 

    ---------------- The volume meshing of elbow-fluid is complete.


    True



.. GENERATED FROM PYTHON SOURCE LINES 151-152

Check the mesh in Meshing mode

.. GENERATED FROM PYTHON SOURCE LINES 152-154

.. code-block:: default

    session.meshing.tui.mesh.check_mesh()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Domain extents.
      x-coordinate: min = -7.874016e+00, max = 7.874016e+00.
      y-coordinate: min = -8.858268e+00, max = 7.874016e+00.
      z-coordinate: min = 0.000000e+00, max = 1.968504e+00.
    Volume statistics.
      minimum volume: 1.488576e-05.
      maximum volume: 3.187147e-02.
        total volume: 1.526006e+02.
    Face area statistics.
       minimum face area: 5.236740e-05.
       maximum face area: 1.176346e-01.
       average face area: 2.526642e-02.
    Checking number of nodes per edge.
    Checking number of nodes per face.
    Checking number of nodes per cell.
    Checking number of faces/neighbors per cell.
    Checking cell faces/neighbors.
    Checking isolated cells.
    Checking face handedness.
    Checking periodic face pairs.
    Checking face children.
    Checking face zone boundary conditions.
    Checking for invalid node coordinates.
    Checking poly cells.
    Checking zones.
    Checking neighborhood.
    Checking modified centroid.
    Checking non-positive or too small area.




.. GENERATED FROM PYTHON SOURCE LINES 155-157

Save the mesh file (mixing_elbow.msh.h5)
session.meshing.tui.file.write_mesh('mixing_elbow.msh.h5')

.. GENERATED FROM PYTHON SOURCE LINES 159-164

Switch to Solution mode:
Now that a high-quality mesh has been generated using Ansys Fluent in meshing
mode, you can now switch to solver mode to complete the setup of the
simulation. We have just checked the mesh, so select Yes to switch to
solution mode.

.. GENERATED FROM PYTHON SOURCE LINES 164-166

.. code-block:: default

    session.meshing.tui.switch_to_solution_mode("yes")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Done.
    *********************************************
    Info: Your license enables 4-way parallel execution.
    For faster simulations, please start the application with the appropriate parallel options.
    *********************************************


    *********************************************
    Info: Your license enables 4-way parallel execution.
    For faster simulations, please start the application with the appropriate parallel options.
    *********************************************


    Preparing...

    unused zone boundary-node-19 removed

    *********************************************
    Info: Your license enables 4-way parallel execution.
    For faster simulations, please start the application with the appropriate parallel options.
    *********************************************


    *********************************************
    Info: Your license enables 4-way parallel execution.
    For faster simulations, please start the application with the appropriate parallel options.
    *********************************************


    Transferring mesh
            creating threads... done
            transferring nodes... done
            transferring cells... done
            transferring faces... done
            post mesh transfer operations... done
    done

    Building...
         mesh
            auto partitioning mesh by Metis (fast),
            distributing mesh
                    parts..,
                    faces..,
                    nodes..,
                    cells..,
            bandwidth reduction using Reverse Cuthill-McKee: 8557/248 = 34.504
         materials,
         interface,
         domains,
         zones,
            wall-elbow
            wall-inlet
            outlet
            cold-inlet
            hot-inlet
            symmetry-xyplane
            interior--elbow-fluid
            elbow-fluid
         surfaces,
         parallel,
    Done.
    Mesh is now scaled to meters.




.. GENERATED FROM PYTHON SOURCE LINES 167-173

Check the mesh in Solver mode:
The mesh check will list the minimum and maximum x, y, and z values from the
mesh in the default SI unit of meters. It will also report a number of other
mesh features that are checked. Any errors in the mesh will be reported at
this time. Ensure that the minimum volume is not negative, since Ansys Fluent
cannot begin a calculation when this is the case.

.. GENERATED FROM PYTHON SOURCE LINES 173-175

.. code-block:: default

    session.solver.tui.mesh.check()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


     Domain Extents:
       x-coordinate: min (m) = -2.000000e-01, max (m) = 2.000000e-01
       y-coordinate: min (m) = -2.250000e-01, max (m) = 2.000000e-01
       z-coordinate: min (m) = 0.000000e+00, max (m) = 4.994352e-02
     Volume statistics:
       minimum volume (m3): 2.439339e-10
       maximum volume (m3): 5.222798e-07
         total volume (m3): 2.500675e-03
     Face area statistics:
       minimum face area (m2): 3.378535e-08
       maximum face area (m2): 7.589314e-05
     Checking mesh.....................................
    Done.




.. GENERATED FROM PYTHON SOURCE LINES 176-182

Set the working units for the mesh:
select "in" to set inches as the working unit for length. Note:  Because the
default SI units will be used for everything except length, there is no need
to change any other units in this problem. If you want a different working
unit for length, other than inches (for example, millimeters), make the
appropriate change.

.. GENERATED FROM PYTHON SOURCE LINES 182-184

.. code-block:: default

    session.solver.tui.define.units("length", "in")








.. GENERATED FROM PYTHON SOURCE LINES 185-186

Enable heat transfer by activating the energy equation.

.. GENERATED FROM PYTHON SOURCE LINES 186-188

.. code-block:: default

    session.solver.tui.define.models.energy("yes", ", ", ", ", ", ", ", ")








.. GENERATED FROM PYTHON SOURCE LINES 189-190

Create a new material called water-liquid.

.. GENERATED FROM PYTHON SOURCE LINES 190-192

.. code-block:: default

    session.solver.tui.define.materials.copy("fluid", "water-liquid")








.. GENERATED FROM PYTHON SOURCE LINES 193-195

Set up the cell zone conditions for the fluid zone (elbow-fluid). Select
water-liquid from the Material list.

.. GENERATED FROM PYTHON SOURCE LINES 195-221

.. code-block:: default

    session.solver.tui.define.boundary_conditions.fluid(
        "elbow-fluid",
        "yes",
        "water-liquid",
        "no",
        "no",
        "no",
        "no",
        "0",
        "no",
        "0",
        "no",
        "0",
        "no",
        "0",
        "no",
        "0",
        "no",
        "1",
        "no",
        "no",
        "no",
        "no",
        "no",
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    water-liquid copied from database.

    (elbow-fluid)




.. GENERATED FROM PYTHON SOURCE LINES 222-224

Set up the boundary conditions for the inlets, outlet, and walls for your CFD
analysis.

.. GENERATED FROM PYTHON SOURCE LINES 224-244

.. code-block:: default


    # cold inlet (cold-inlet), Setting: Value:
    # Velocity Specification Method: Magnitude, Normal to Boundary

    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "cold-inlet", [], "vmag", "no", 0.4, "quit"
    )
    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "cold-inlet", [], "ke-spec", "no", "no", "no", "yes", "quit"
    )
    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "cold-inlet", [], "turb-intensity", 5, "quit"
    )
    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "cold-inlet", [], "turb-hydraulic-diam", 4, "quit"
    )
    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "cold-inlet", [], "temperature", "no", 293.15, "quit"
    )








.. GENERATED FROM PYTHON SOURCE LINES 245-247

hot inlet (hot-inlet), Setting: Value:
Velocity Specification Method: Magnitude, Normal to Boundary

.. GENERATED FROM PYTHON SOURCE LINES 247-265

.. code-block:: default



    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "hot-inlet", [], "vmag", "no", 1.2, "quit"
    )
    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "hot-inlet", [], "ke-spec", "no", "no", "no", "yes", "quit"
    )
    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "hot-inlet", [], "turb-intensity", 5, "quit"
    )
    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "hot-inlet", [], "turb-hydraulic-diam", 1, "quit"
    )
    session.solver.tui.define.boundary_conditions.set.velocity_inlet(
        "hot-inlet", [], "temperature", "no", 313.15, "quit"
    )








.. GENERATED FROM PYTHON SOURCE LINES 266-269

pressure outlet (outlet), Setting: Value:
Backflow Turbulent Intensity: 5 [%]
Backflow Turbulent Viscosity Ratio: 4

.. GENERATED FROM PYTHON SOURCE LINES 269-277

.. code-block:: default


    session.solver.tui.define.boundary_conditions.set.pressure_outlet(
        "outlet", [], "turb-intensity", 5, "quit"
    )
    session.solver.tui.define.boundary_conditions.set.pressure_outlet(
        "outlet", [], "turb-viscosity-ratio", 4, "quit"
    )








.. GENERATED FROM PYTHON SOURCE LINES 278-279

Enable the plotting of residuals during the calculation.

.. GENERATED FROM PYTHON SOURCE LINES 279-281

.. code-block:: default

    session.solver.tui.solve.monitors.residual.plot("yes")








.. GENERATED FROM PYTHON SOURCE LINES 282-284

Create a surface report definition of average temperature at the outlet
(outlet) called "outlet-temp-avg

.. GENERATED FROM PYTHON SOURCE LINES 284-295

.. code-block:: default

    session.solver.tui.solve.report_definitions.add(
        "outlet-temp-avg",
        "surface-massavg",
        "field",
        "temperature",
        "surface-names",
        "outlet",
        "()",
        "quit",
    )








.. GENERATED FROM PYTHON SOURCE LINES 296-301

Create a convergence condition for outlet-temp-avg:
Provide con-outlet-temp-avg for Conditions. Select outlet-temp-avg Report
Definition. Provide 1e-5 for Stop Criterion. Provide 20 for Ignore Iterations
Before. Provide 15 for Use Iterations. Enable Print. Set Every Iteration to
3.

.. GENERATED FROM PYTHON SOURCE LINES 301-334

.. code-block:: default



    # These settings will cause Fluent to consider the solution converged when the
    # surface report definition value for each of the previous 15 iterations is
    # within 0.001% of the current value. Convergence of the values will be checked
    # every 3 iterations. The first 20 iterations will be ignored, allowing for any
    # initial solution dynamics to settle out. Note that the value printed to the
    # console is the deviation between the current and previous iteration values
    # only.
    session.solver.tui.solve.convergence_conditions(
        "conv-reports",
        "add",
        "con-outlet-temp-avg",
        "initial-values-to-ignore",
        "20",
        "previous-values-to-consider",
        "15",
        "print?",
        "yes",
        "report-defs",
        "outlet-temp-avg",
        "stop-criterion",
        "1e-04",
        "quit",
        "quit",
        "condition",
        "1",
        "frequency",
        "3",
        "quit",
    )
    session.solver.tui.solve.convergence_conditions("frequency", "3", "quit")








.. GENERATED FROM PYTHON SOURCE LINES 335-336

Initialize the flow field using the Hybrid Initialization

.. GENERATED FROM PYTHON SOURCE LINES 336-338

.. code-block:: default

    session.solver.tui.solve.initialize.hyb_initialization()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Initialize using the hybrid initialization method.

    Checking case topology... 
    -This case has both inlets & outlets 
    -Pressure information is not available at the boundaries.
     Case will be initialized with constant pressure

            iter            scalar-0

            1               1.000000e+00
            2               1.734619e-04
            3               1.111955e-05
            4               1.039895e-05
            5               1.748861e-06
            6               2.089123e-06
            7               3.700402e-07
            8               4.065077e-07
            9               8.554391e-08
            10              8.472654e-08

    Hybrid initialization is done.




.. GENERATED FROM PYTHON SOURCE LINES 339-341

Save the case file (mixing_elbow1.cas.h5).
session.solver.tui.file.write_case('mixing_elbow1.cas.h5')

.. GENERATED FROM PYTHON SOURCE LINES 343-344

Solve for 100 Iterations.

.. GENERATED FROM PYTHON SOURCE LINES 344-346

.. code-block:: default

    session.solver.tui.solve.iterate(100)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
         1  1.0000e+00  4.1473e-03  4.5546e-03  1.1663e-03  8.6235e-05  9.8088e-02  7.0288e-01              0:00:24   99
         2  7.9671e-01  2.5425e-03  3.0861e-03  7.1310e-04  1.0048e-04  5.5492e-02  1.0036e-01              0:00:24   98
         3  7.6860e-01  1.6180e-03  2.3032e-03  6.0820e-04  1.0789e-04  2.0352e-02  6.3102e-02              0:00:23   97
         4  7.3437e-01  1.0737e-03  1.9806e-03  4.9718e-04  1.1694e-04  1.7442e-02  3.9505e-02              0:00:22   96
         5  7.0314e-01  9.0678e-04  1.8322e-03  4.3132e-04  1.2305e-04  1.6217e-02  2.6976e-02              0:00:22   95
         6  6.5018e-01  8.6029e-04  1.7296e-03  3.9416e-04  1.2525e-04  1.5967e-02  2.0508e-02              0:00:21   94
         7  5.9081e-01  8.1091e-04  1.6600e-03  3.6385e-04  1.2500e-04  1.6259e-02  1.6972e-02              0:00:21   93
         8  5.3465e-01  7.5380e-04  1.5984e-03  3.3625e-04  1.2238e-04  1.6977e-02  1.4388e-02              0:00:20   92
         9  4.8446e-01  7.0850e-04  1.5405e-03  3.1487e-04  1.1661e-04  1.7772e-02  1.2405e-02              0:00:20   91
        10  4.4761e-01  6.7937e-04  1.4649e-03  2.9654e-04  1.0937e-04  1.8243e-02  1.0660e-02              0:00:20   90
        11  4.1322e-01  6.4884e-04  1.3835e-03  2.8122e-04  1.0022e-04  1.8267e-02  9.3125e-03              0:00:19   89

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        12  3.8382e-01  6.1879e-04  1.2983e-03  2.6803e-04  8.9377e-05  1.7834e-02  8.2411e-03              0:00:19   88
        13  3.5650e-01  5.8667e-04  1.2081e-03  2.5576e-04  7.7168e-05  1.6937e-02  7.3318e-03              0:00:19   87
        14  3.3105e-01  5.5547e-04  1.1080e-03  2.4389e-04  6.5673e-05  1.5697e-02  6.5420e-03              0:00:19   86
        15  3.0696e-01  5.2543e-04  1.0101e-03  2.3221e-04  5.5621e-05  1.4234e-02  5.8267e-03              0:00:19   85
        16  2.9149e-01  4.9731e-04  9.1748e-04  2.2140e-04  4.8335e-05  1.2693e-02  5.1771e-03              0:00:19   84
        17  2.7734e-01  4.6941e-04  8.2719e-04  2.1146e-04  4.3351e-05  1.1139e-02  4.5914e-03              0:00:18   83
        18  2.6399e-01  4.4155e-04  7.5083e-04  2.0266e-04  3.9974e-05  9.6705e-03  4.0592e-03              0:00:18   82
        19  2.4924e-01  4.1325e-04  6.8276e-04  1.9449e-04  3.7364e-05  8.3371e-03  3.5917e-03              0:00:23   81
        20  2.3736e-01  3.8378e-04  6.2487e-04  1.8685e-04  3.4384e-05  7.1199e-03  3.2183e-03              0:00:22   80
        21  2.2569e-01  3.5724e-04  5.7743e-04  1.7983e-04  3.0985e-05  6.0599e-03  2.9084e-03              0:00:21   79
        22  2.1377e-01  3.3225e-04  5.4005e-04  1.7328e-04  2.7467e-05  5.1465e-03  2.6390e-03              0:00:21   78

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        23  2.0313e-01  3.0847e-04  5.1066e-04  1.6673e-04  2.4004e-05  4.3642e-03  2.4053e-03              0:00:21   77
        24  1.9228e-01  2.8591e-04  4.8596e-04  1.6017e-04  2.0891e-05  3.7343e-03  2.2000e-03              0:00:21   76
        25  1.8217e-01  2.6505e-04  4.6437e-04  1.5325e-04  1.8156e-05  3.2595e-03  2.0241e-03              0:00:21   75
        26  1.7320e-01  2.4561e-04  4.4366e-04  1.4575e-04  1.5669e-05  2.8748e-03  1.8560e-03              0:00:21   74
        27  1.6331e-01  2.2766e-04  4.2309e-04  1.3779e-04  1.3451e-05  2.5426e-03  1.7017e-03              0:00:20   73
        28  1.5300e-01  2.1108e-04  4.0129e-04  1.2984e-04  1.1597e-05  2.2661e-03  1.5652e-03              0:00:20   72
        29  1.4389e-01  1.9541e-04  3.7872e-04  1.2190e-04  1.0054e-05  2.0407e-03  1.4398e-03              0:00:20   71
        30  1.3453e-01  1.8027e-04  3.5552e-04  1.1380e-04  8.7389e-06  1.8550e-03  1.3254e-03              0:00:19   70
        31  1.2547e-01  1.6605e-04  3.3252e-04  1.0577e-04  7.6093e-06  1.7019e-03  1.2264e-03              0:00:19   69
        32  1.1688e-01  1.5274e-04  3.1030e-04  9.7723e-05  6.6460e-06  1.5702e-03  1.1421e-03              0:00:19   68
        33  1.0928e-01  1.4023e-04  2.8897e-04  8.9955e-05  5.8258e-06  1.4513e-03  1.0601e-03              0:00:19   67

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        34  1.0093e-01  1.2839e-04  2.6821e-04  8.2506e-05  5.1250e-06  1.3439e-03  9.8181e-04              0:00:19   66
        35  9.3214e-02  1.1741e-04  2.4887e-04  7.5531e-05  4.5306e-06  1.2512e-03  9.1314e-04              0:00:19   65
        36  8.6251e-02  1.0734e-04  2.3087e-04  6.9041e-05  4.0182e-06  1.1653e-03  8.5005e-04  2.5025e-03  0:00:19   64
        37  7.9962e-02  9.7831e-05  2.1333e-04  6.3074e-05  3.5790e-06  1.0878e-03  7.9091e-04              0:00:19   63
        38  7.4217e-02  8.9102e-05  1.9694e-04  5.7625e-05  3.2015e-06  1.0160e-03  7.3446e-04              0:00:18   62
        39  6.8948e-02  8.1135e-05  1.8182e-04  5.2637e-05  2.8747e-06  9.5052e-04  6.8192e-04  1.5924e-03  0:00:18   61
        40  6.3904e-02  7.3897e-05  1.6790e-04  4.8076e-05  2.5903e-06  8.9092e-04  6.3271e-04              0:00:17   60
        41  5.9306e-02  6.7371e-05  1.5513e-04  4.3932e-05  2.3451e-06  8.3366e-04  5.8617e-04              0:00:17   59
        42  5.5121e-02  6.1327e-05  1.4284e-04  4.0157e-05  2.1284e-06  7.8055e-04  5.4302e-04  1.0083e-03  0:00:16   58
        43  5.1132e-02  5.5893e-05  1.3155e-04  3.6738e-05  1.9399e-06  7.3166e-04  5.0254e-04              0:00:16   57
        44  4.7411e-02  5.0962e-05  1.2110e-04  3.3639e-05  1.7726e-06  6.8308e-04  4.6406e-04              0:00:16   56

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        45  4.3892e-02  4.6455e-05  1.1160e-04  3.0807e-05  1.6244e-06  6.3737e-04  4.2820e-04  6.4758e-04  0:00:15   55
        46  4.0618e-02  4.2454e-05  1.0302e-04  2.8242e-05  1.4916e-06  5.9506e-04  3.9462e-04              0:00:15   54
        47  3.7710e-02  3.8734e-05  9.4963e-05  2.5916e-05  1.3721e-06  5.5431e-04  3.6361e-04              0:00:15   53
        48  3.4996e-02  3.5361e-05  8.7586e-05  2.3804e-05  1.2625e-06  5.1526e-04  3.3574e-04  4.0972e-04  0:00:14   52
        49  3.2530e-02  3.2335e-05  8.0802e-05  2.1871e-05  1.1617e-06  4.7819e-04  3.1003e-04              0:00:14   51
        50  3.0194e-02  2.9567e-05  7.4438e-05  2.0096e-05  1.0694e-06  4.4311e-04  2.8581e-04              0:00:14   50
        51  2.7983e-02  2.7032e-05  6.8542e-05  1.8466e-05  9.8428e-07  4.0933e-04  2.6333e-04  2.5346e-04  0:00:14   49
        52  2.5838e-02  2.4722e-05  6.3027e-05  1.6965e-05  9.0586e-07  3.7712e-04  2.4184e-04              0:00:13   48
        53  2.3899e-02  2.2633e-05  5.7891e-05  1.5588e-05  8.3273e-07  3.4681e-04  2.2127e-04              0:00:13   47
        54  2.2157e-02  2.0699e-05  5.3068e-05  1.4317e-05  7.6474e-07  3.1780e-04  2.0227e-04  1.5407e-04  0:00:13   46
        55  2.0579e-02  1.8940e-05  4.8514e-05  1.3156e-05  7.0188e-07  2.9051e-04  1.8466e-04              0:00:13   45

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        56  1.8933e-02  1.7317e-05  4.4373e-05  1.2096e-05  6.4372e-07  2.6516e-04  1.6837e-04              0:00:12   44
    Solution for report definition outlet-temp-avg has converged
        57  1.7382e-02  1.5828e-05  4.0603e-05  1.1116e-05  5.8931e-07  2.4182e-04  1.5339e-04  9.1847e-05  0:00:12   43
        58  1.5905e-02  1.4467e-05  3.7103e-05  1.0216e-05  5.3950e-07  2.2017e-04  1.3960e-04              0:00:12   42
        59  1.4564e-02  1.3218e-05  3.3896e-05  9.3858e-06  4.9283e-07  2.0023e-04  1.2693e-04              0:00:12   41
    Solution for report definition outlet-temp-avg has converged
        60  1.3345e-02  1.2074e-05  3.0947e-05  8.6215e-06  4.4933e-07  1.8240e-04  1.1535e-04  5.3334e-05  0:00:11   40
        61  1.2201e-02  1.1024e-05  2.8212e-05  7.9185e-06  4.0881e-07  1.6621e-04  1.0480e-04              0:00:11   39
        62  1.1154e-02  1.0058e-05  2.5683e-05  7.2721e-06  3.7101e-07  1.5126e-04  9.5158e-05              0:00:11   38
    Solution for report definition outlet-temp-avg has converged
        63  1.0215e-02  9.1755e-06  2.3363e-05  6.6727e-06  3.3587e-07  1.3752e-04  8.6334e-05  2.9665e-05  0:00:10   37
        64  9.3486e-03  8.3667e-06  2.1232e-05  6.1224e-06  3.0392e-07  1.2508e-04  7.8284e-05              0:00:10   36
        65  8.5598e-03  7.6237e-06  1.9276e-05  5.6146e-06  2.7465e-07  1.1376e-04  7.0960e-05              0:00:10   35
    Solution for report definition outlet-temp-avg has converged
        66  7.8414e-03  6.9423e-06  1.7484e-05  5.1452e-06  2.4775e-07  1.0341e-04  6.4268e-05  1.5356e-05  0:00:10   34

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        67  7.1868e-03  6.3183e-06  1.5851e-05  4.7124e-06  2.2309e-07  9.3854e-05  5.8160e-05              0:00:09   33
        68  6.5811e-03  5.7483e-06  1.4366e-05  4.3127e-06  2.0058e-07  8.5005e-05  5.2570e-05              0:00:09   32
    Solution for report definition outlet-temp-avg has converged
        69  6.0180e-03  5.2291e-06  1.3013e-05  3.9429e-06  1.8008e-07  7.7042e-05  4.7417e-05  7.1330e-06  0:00:09   31
        70  5.4927e-03  4.7527e-06  1.1778e-05  3.6025e-06  1.6139e-07  6.9764e-05  4.2729e-05              0:00:09   30
        71  5.0062e-03  4.3155e-06  1.0656e-05  3.2882e-06  1.4442e-07  6.3090e-05  3.8447e-05              0:00:08   29
    Solution for report definition outlet-temp-avg has converged
        72  4.5575e-03  3.9157e-06  9.6321e-06  2.9983e-06  1.2899e-07  5.6974e-05  3.4561e-05  2.7411e-06  0:00:08   28
        73  4.1467e-03  3.5506e-06  8.6980e-06  2.7304e-06  1.1500e-07  5.1382e-05  3.1034e-05              0:00:08   27
        74  3.7692e-03  3.2169e-06  7.8473e-06  2.4833e-06  1.0234e-07  4.6265e-05  2.7834e-05              0:00:08   26
    Solution for report definition outlet-temp-avg has converged
        75  3.4222e-03  2.9126e-06  7.0721e-06  2.2558e-06  9.0925e-08  4.1625e-05  2.4941e-05  5.6109e-07  0:00:07   25
        76  3.1042e-03  2.6351e-06  6.3661e-06  2.0464e-06  8.0656e-08  3.7414e-05  2.2325e-05              0:00:07   24
        77  2.8131e-03  2.3823e-06  5.7242e-06  1.8541e-06  7.1437e-08  3.3591e-05  1.9970e-05              0:00:07   23

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
    Solution for report definition outlet-temp-avg has converged
        78  2.5483e-03  2.1524e-06  5.1425e-06  1.6778e-06  6.3187e-08  3.0130e-05  1.7849e-05  6.3293e-07  0:00:07   22
        79  2.3047e-03  1.9435e-06  4.6150e-06  1.5164e-06  5.5796e-08  2.6995e-05  1.5942e-05              0:00:06   21
        80  2.0823e-03  1.7542e-06  4.1376e-06  1.3687e-06  4.9193e-08  2.4156e-05  1.4229e-05              0:00:06   20
    Solution for report definition outlet-temp-avg has converged
        81  1.8792e-03  1.5823e-06  3.7060e-06  1.2339e-06  4.3297e-08  2.1591e-05  1.2690e-05  8.0161e-07  0:00:06   19
        82  1.6938e-03  1.4264e-06  3.3161e-06  1.1110e-06  3.8037e-08  1.9277e-05  1.1307e-05              0:00:05   18
        83  1.5253e-03  1.2852e-06  2.9639e-06  9.9896e-07  3.3360e-08  1.7191e-05  1.0065e-05              0:00:05   17
    Solution for report definition outlet-temp-avg has converged
        84  1.3711e-03  1.1573e-06  2.6487e-06  8.9715e-07  2.9206e-08  1.5312e-05  8.9525e-06  8.7853e-07  0:00:05   16
        85  1.2296e-03  1.0414e-06  2.3668e-06  8.0490e-07  2.5525e-08  1.3621e-05  7.9574e-06              0:00:04   15
        86  1.1020e-03  9.3688e-07  2.1144e-06  7.2131e-07  2.2271e-08  1.2106e-05  7.0687e-06              0:00:04   14
    Solution for report definition outlet-temp-avg has converged
    !   87 report definition solution is converged
        87  9.8703e-04  8.4231e-07  1.8877e-06  6.4563e-07  1.9398e-08  1.0744e-05  6.2762e-06  8.2771e-07  0:00:04   13




.. GENERATED FROM PYTHON SOURCE LINES 347-349

Save the data file (mixing_elbow1.dat.h5).
session.solver.tui.file.write_data('mixing_elbow1.dat.h5')

.. GENERATED FROM PYTHON SOURCE LINES 351-355

Create and display a definition for velocity magnitude contours on the
symmetry plane:
Provide contour-vel for Contour Name. Select velocity magnitude. Select
symmetry-xyplane from the Surfaces list. Display contour-vel contour.

.. GENERATED FROM PYTHON SOURCE LINES 355-373

.. code-block:: default


    session.solver.tui.display.objects.create(
        "contour",
        "contour-vel",
        "filled?",
        "yes",
        "node-values?",
        "yes",
        "field",
        "velocity-magnitude",
        "surfaces-list",
        "symmetry-xyplane",
        "()",
        "coloring",
        "banded",
        "quit",
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    !   87 solution is converged




.. GENERATED FROM PYTHON SOURCE LINES 374-378

Create and display a definition for temperature contours on the symmetry
plane:
Provide contour-temp for Contour Name. Select temperature. Select
symmetry-xyplane from the Surfaces list. Display contour-temp contour.

.. GENERATED FROM PYTHON SOURCE LINES 378-396

.. code-block:: default


    session.solver.tui.display.objects.create(
        "contour",
        "contour-temp",
        "filled?",
        "yes",
        "node-values?",
        "yes",
        "field",
        "temperature",
        "surfaces-list",
        "symmetry-xyplane",
        "()",
        "coloring",
        "smooth",
        "quit",
    )








.. GENERATED FROM PYTHON SOURCE LINES 397-398

Create and display velocity vectors on the symmetry-xyplane plane:

.. GENERATED FROM PYTHON SOURCE LINES 398-419

.. code-block:: default


    # Provide vector-vel for Vector Name. Select arrow for the Style. Select
    # symmetry-xyplane from the Surfaces selection list. Provide 4 for Scale. Set
    # Skip to 2.
    session.solver.tui.display.objects.create(
        "vector",
        "vector-vel",
        "style",
        "arrow",
        "surface-list",
        "symmetry-xyplane",
        "()",
        "scale",
        "scale-f",
        "4",
        "quit",
        "skip",
        "2",
        "quit",
    )








.. GENERATED FROM PYTHON SOURCE LINES 420-422

Create an iso-surface representing the intersection of the plane z=0 and the
surface outlet. Name: z=0_outlet

.. GENERATED FROM PYTHON SOURCE LINES 422-426

.. code-block:: default

    session.solver.tui.surface.iso_surface(
        "z-coordinate", "z=0_outlet", "outlet", "()", "()", "0", "()"
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    range [0, 1.9628789]




.. GENERATED FROM PYTHON SOURCE LINES 427-429

Display and save an XY plot of the temperature profile across the centerline
of the outlet for the initial solution

.. GENERATED FROM PYTHON SOURCE LINES 429-440

.. code-block:: default

    session.solver.tui.display.objects.create(
        "xy",
        "xy-outlet-temp",
        "y-axis-function",
        "temperature",
        "surfaces-list",
        "z=0_outlet",
        "()",
        "quit",
    )








.. GENERATED FROM PYTHON SOURCE LINES 441-443

Write final case and data.
session.solver.tui.file.write_case_data("mixing_elbow2_tui.cas.h5")

.. GENERATED FROM PYTHON SOURCE LINES 445-446

Close Fluent

.. GENERATED FROM PYTHON SOURCE LINES 446-449

.. code-block:: default


    session.exit()









.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  7.494 seconds)


.. _sphx_glr_download_examples_00-fluent_mixing_elbow.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: mixing_elbow.py <mixing_elbow.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: mixing_elbow.ipynb <mixing_elbow.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

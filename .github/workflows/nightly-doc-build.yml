name: Nightly Documentation Build

on:
  schedule:  # UTC at 0400
    - cron:  '0 4 * * *'
  workflow_dispatch:

env:
  DOCUMENTATION_CNAME: 'fluent.docs.pyansys.com'

jobs:
  nightly_docs_build:
    runs-on: [self-hosted, pyfluent]
    strategy:
      fail-fast: false
      matrix:
        image-tag: [v22.2.0, v23.1.0, v23.2.0]
      env:
        DOC_DEPLOYMENT_IMAGE_TAG: v22.2.0

    steps:
      - uses: actions/checkout@v3

      # used for documentation deployment
      - name: Get Bot Application Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt install pandoc libegl1

      - name: Install pyfluent
        run: make install

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.REPO_DOWNLOAD_PAT }}

      - name: Pull Fluent docker image
        run: make docker-pull
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Run API codegen
        run: make api-codegen
        env:
          ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
          PYFLUENT_START_INSTANCE: 0
          PYFLUENT_LAUNCH_CONTAINER: 1
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Build Documentation
        run: make build-doc
        env:
          ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
          PYFLUENT_START_INSTANCE: 0
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Upload HTML documentation
        if: matrix.image-tag == env.DOC_DEPLOYMENT_IMAGE_TAG
        uses: actions/upload-artifact@v3
        with:
          name: documentation-html
          path: doc/_build/html
          retention-days: 7

      - name: "Deploy development documentation"
        if: matrix.image-tag == env.DOC_DEPLOYMENT_IMAGE_TAG
        uses: pyansys/actions/doc-deploy-dev@v2
        with:
            cname: ${{ env.DOCUMENTATION_CNAME }}
            token: ${{ secrets.GITHUB_TOKEN }}

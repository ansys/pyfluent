
name: Test Run Custom

on:
  #pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
  PYFLUENT_TIMEOUT_FORCE_EXIT: 30
  PYFLUENT_LAUNCH_CONTAINER: 1
  PYFLUENT_LOGGING: 'DEBUG'
  PYFLUENT_WATCHDOG_DEBUG: 'OFF'
  PYFLUENT_HIDE_LOG_SECRETS: 1

jobs:

  build_test:
    name: Build and Test
    runs-on: [self-hosted, pyfluent]
    strategy:
      fail-fast: false
      matrix:
        include:
          - image-tag: v22.2.0
            version: 222
          - image-tag: v23.1.0
            version: 231
          - image-tag: v23.2.0
            version: 232
          - image-tag: v24.1.0
            version: 241
          - image-tag: v24.2.0
            version: 242
          - image-tag: v25.1.0
            version: 251

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Add version information
        run: make version-info

      - name: Install pyfluent
        run: make install

      - name: Retrieve PyFluent version
        run: |
          echo "PYFLUENT_VERSION=$(python -c "from ansys.fluent.core import __version__; print(); print(__version__)" | tail -1)" >> $GITHUB_OUTPUT
          echo "PYFLUENT version is: $(python -c "from ansys.fluent.core import __version__; print(); print(__version__)" | tail -1)"
        id: version

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ansys-bot
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Fluent docker image
        if: matrix.image-tag != 'v25.1.0'
        run: make docker-pull
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Pull Fluent docker image dev
        if: matrix.image-tag == 'v25.1.0'
        run: make docker-pull
        env:
          FLUENT_IMAGE_TAG: ${{ vars.FLUENT_STABLE_IMAGE_DEV }}

      - name: Run API codegen
        run: make api-codegen
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Print Fluent version info
        run: |
          cat src/ansys/fluent/core/generated/fluent_version_${{ matrix.version }}.py

      - name: Install again after codegen
        run: |
          rm -rf dist
          make install > /dev/null

      - name: Unit Testing
        run: |
            echo "Running custom unittest"
            sudo rm -rf /home/ansys/Downloads/ansys_fluent_core_examples/*
            make install-test
            python -m pytest -v --no-cov --capture=no -k test_parametric_workflow --nightly
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Cleanup previous docker containers
        if: always()
        run: make cleanup-previous-docker-containers


name: GitHub Actions

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
  stylecheck:
    name: Style Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Style Requirements
        run: |
          pip install -r requirements_style.txt --disable-pip-version-check

      - name: Run flake8
        if: always()
        run: |
          make flake8

      - name: Run protolint
        uses: plexsystems/protolint-action@v0.6.0
        if: always()
        with:
          configDirectory: protos

  test-import:
    name: Smoke Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Linux pip cache
        uses: actions/cache@v2
        if: ${{ runner.os == 'Linux' }}
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Windows pip cache
        uses: actions/cache@v2
        if: ${{ runner.os == 'Windows' }}
        with:
          path: ~\AppData\Local\pip\Cache
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Install pyfluent
        run: make install

      - name: Install pyvistaqt requirements
        if: matrix.os == 'ubuntu-latest'
        run: make install-pyvistaqt-requirements

      - name: Test import
        run: make test-import

  build_test:
    name: Build and Unit Testing
    needs: test-import
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Install pyfluent
        run: make install

      - name: Install pyvistaqt requirements
        run: make install-pyvistaqt-requirements

      - name: Unit Testing
        run: make unittest

      - name: Check package
        run: |
          pip install twine
          twine check dist/*

      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: PyFluent-packages
          path: |
            dist/*.whl
            dist/*.tar.gz
          retention-days: 7

  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: actions/download-artifact@v2

      - name: Display package file list
        run: ls -R

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.tar.gz

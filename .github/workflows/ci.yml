
name: GitHub Actions

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  stylecheck:
    name: Style Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install pre-commit
        run: |
          python -m pip install pre-commit

      - name: Run pre-commit
        if: always()
        run: |
          pre-commit run --all-files --show-diff-on-failure

      - name: Run protolint
        uses: plexsystems/protolint-action@v0.6.0
        if: always()
        with:
          configDirectory: protos

  test-import:
    name: Smoke Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Linux pip cache
        uses: actions/cache@v2
        if: ${{ runner.os == 'Linux' }}
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Windows pip cache
        uses: actions/cache@v2
        if: ${{ runner.os == 'Windows' }}
        with:
          path: ~\AppData\Local\pip\Cache
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Install pyfluent
        run: make install

      - name: Test import
        run: make test-import

  docs_build:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # used for documentation deployment
      - name: Get Bot Application Token
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt install pandoc libegl1

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_docs*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Install pyfluent with post requirements
        run: make install-post

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.REPO_DOWNLOAD_PAT }}

      - name: Pull Fluent docker image
        run: make docker-pull

      - name: Build Documentation
        run: |
          pip install -r requirements_docs.txt
          make -C doc html
          touch doc/_build/html/.nojekyll
          echo "fluentdocs.pyansys.com" >> doc/_build/html/CNAME
        env:
          ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
          PYFLUENT_FLUENT_PORT: 63084
          PYFLUENT_START_INSTANCE: 0

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v2
        with:
          name: HTML-Documentation
          path: doc/_build/html
          retention-days: 7

      - name: Deploy
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          repository-name: pyansys/pyfluent-docs
          token: ${{ steps.get_workflow_token.outputs.token }}
          BRANCH: gh-pages
          FOLDER: doc/_build/html
          CLEAN: true

  build_test:
    name: Build and Unit Testing
    needs: test-import
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Install pyvistaqt requirements
        run: make install-pyvistaqt-requirements

      - name: Install pyfluent with post requirements
        run: make install-post

      - name: Unit Testing
        run: make unittest

      - name: Check package
        run: |
          pip install twine
          twine check dist/*

      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: PyFluent-packages
          path: |
            dist/*.whl
            dist/*.tar.gz
          retention-days: 7

  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: actions/download-artifact@v2

      - name: Display package file list
        run: ls -R

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.tar.gz

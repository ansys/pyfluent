name: Nightly Development Documentation Build

on:
  schedule:  # UTC at 0400
    - cron:  '0 4 * * *'
  workflow_dispatch:

env:
  DOCUMENTATION_CNAME: 'fluent.docs.pyansys.com'
  DOC_DEPLOYMENT_IMAGE_TAG: v23.2.0
  ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
  PYFLUENT_TIMEOUT_FORCE_EXIT: 30
  PYFLUENT_LAUNCH_CONTAINER: 1
  PYFLUENT_LOGGING: 'DEBUG'
  PYFLUENT_WATCHDOG_DEBUG: 'OFF'
  PYFLUENT_HIDE_LOG_SECRETS: 1

jobs:
  build_dev_docs:
    runs-on: [self-hosted, pyfluent]
    strategy:
      fail-fast: false
      matrix:
        image-tag: [v23.2.0, v24.1.0]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt-get install pandoc libegl1 make xvfb libfontconfig1 libxrender1 libxkbcommon-x11-0 -y

      - name: Install pyfluent
        run: make install

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.REPO_DOWNLOAD_PAT }}

      - name: Pull Fluent docker image
        run: make docker-pull
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Run API codegen
        run: make api-codegen
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Build All Documentation
        run: make build-all-docs
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Zip HTML Documentation before upload
        run: |
          sudo apt install zip -y
          pushd doc/_build/html
          zip -r ../../../HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}.zip .
          popd

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}
          path: HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}.zip
          retention-days: 7

  deploy_dev_docs:
    runs-on: ubuntu-latest
    needs: [build_dev_docs]
    steps:
      - name: "Deploy development documentation"
        uses: ansys/actions/doc-deploy-dev@v4
        with:
            doc-artifact-name: 'HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}'
            decompress-artifact: true
            cname: ${{ env.DOCUMENTATION_CNAME }}
            token: ${{ secrets.GITHUB_TOKEN }}
